<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="oss.fosslight.repository.VulnerabilityMapper">

	<sql id="limitPage">
		LIMIT #{startIndex}, #{pageListSize}
	</sql>
    <sql id="orderby">
    	<if test="!@oss.fosslight.util.StringUtil@isEmpty(sidx)">
    		<choose>
    		<when test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
    			<if test="!@oss.fosslight.util.StringUtil@isEmpty(sord)">
    				<choose>
						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
							ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if> A.SEQ ASC
									, A.MAJOR_VERSION ASC
									, BINARY ( CASE WHEN A.VERSION REGEXP '^[a-zA-Z]+' THEN VERSION END ) ASC
									, A.ASCII ASC
									, A.MINOR_VERSION ASC
									, A.PATCH_VERSION ASC
									, A.VERSION_LEN ASC
						</when>
						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
							ORDER BY <if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if> A.SEQ DESC
									, A.MAJOR_VERSION DESC
									, BINARY ( CASE WHEN A.VERSION REGEXP '^[a-zA-Z]+' THEN VERSION END ) DESC
									, A.ASCII DESC
									, A.MINOR_VERSION DESC
									, A.PATCH_VERSION DESC
									, A.VERSION_LEN DESC
						</when>
					</choose>
    			</if>
    		</when>
    		<otherwise>
    			<choose>
    				<when test="@oss.fosslight.util.StringUtil@equals('PRODUCT', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							PRODUCT ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							PRODUCT DESC
    						</when>
    					</choose>
    				</when>
    				<when test="@oss.fosslight.util.StringUtil@equals('OSS_NICKNAME', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							OSS_NICKNAME ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							OSS_NICKNAME DESC
    						</when>
    					</choose>
    				</when>
    				<when test="@oss.fosslight.util.StringUtil@equals('CVSS_SCORE', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							CVSS_SCORE ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							CVSS_SCORE DESC
    						</when>
    					</choose>
    				</when>
    				<when test="@oss.fosslight.util.StringUtil@equals('CVE_ID', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							CVE_ID ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							CVE_ID DESC
    						</when>
    					</choose>
    				</when>
    				<when test="@oss.fosslight.util.StringUtil@equals('MODI_DATE', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							MODI_DATE ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							MODI_DATE DESC
    						</when>
    					</choose>
    				</when>
    				<when test="@oss.fosslight.util.StringUtil@equals('VENDOR', sidx)">
    					ORDER BY<if test="vulnerabilityCheckFlag != null"> CASE WHEN VULNERABILITY_RESOLUTION = 'Fixed' THEN 1 ELSE 0 END,</if>
    					<choose>
    						<when test="@oss.fosslight.util.StringUtil@equals('asc', sord)">
    							VENDOR ASC
    						</when>
    						<when test="@oss.fosslight.util.StringUtil@equals('desc', sord)">
    							VENDOR DESC
    						</when>
    					</choose>
    				</when>
    			</choose>
    		</otherwise>
    		</choose>
    	</if>
    </sql>

	<sql id="filters">
		AND
		<foreach collection="filtersMap.rules" item="item" separator="AND">
			<choose>
				<when test='item.field == "product"'>
					PRODUCT
				</when>
				<when test='item.field == "ossNickname"'>
					OSS_NICKNAME
				</when>
				<when test='item.field == "version"'>
					VERSION
				</when>
				<when test='item.field == "cvssScore"'>
					CVSS_SCORE
				</when>
				<when test='item.field == "cveId"'>
					CVE_ID
				</when>
				<when test='item.field == "modiDate"'>
					MODI_DATE
				</when>
				<when test='item.field == "vendor"'>
					VENDOR
				</when>
			</choose>
			<choose>
				<when test='item.op == "eq"'>
					= #{item.data}
				</when>
				<when test='item.op == "ne"'>
					<![CDATA[<>]]> #{item.data}
				</when>
				<when test='item.op == "bw"'>
					LIKE CONCAT(#{item.data}, '%')
				</when>
				<when test='item.op == "bn"'>
					NOT LIKE CONCAT(#{item.data}, '%')
				</when>
				<when test='item.op == "ew"'>
					LIKE CONCAT('%', #{item.data})
				</when>
				<when test='item.op == "en"'>
					NOT LIKE CONCAT('%', #{item.data})
				</when>
				<when test='item.op == "cn"'>
					LIKE CONCAT('%', #{item.data}, '%')
				</when>
				<when test='item.op == "nc"'>
					NOT LIKE CONCAT('%', #{item.data}, '%')
				</when>
				<when test='item.op == "lt"'>
					<![CDATA[<]]> #{item.data}
				</when>
				<when test='item.op == "le"'>
					<![CDATA[<=]]> #{item.data}
				</when>
				<when test='item.op == "gt"'>
					<![CDATA[>]]> #{item.data}
				</when>
				<when test='item.op == "ge"'>
					<![CDATA[>=]]> #{item.data}
				</when>
				<otherwise>

				</otherwise>
			</choose>
		</foreach>
    </sql>

	<select id="selectVulnerabilityTotalCount" parameterType="oss.fosslight.domain.Vulnerability" resultType="int">
		SELECT COUNT(1)
		FROM
		(
			SELECT A.PRODUCT, A.VERSION, IFNULL(GROUP_CONCAT(DISTINCT A.OSS_NICKNAME), '') AS OSS_NICKNAME, A.CVE_ID, MAX(A.CVSS_SCORE) AS CVSS_SCORE, GROUP_CONCAT(DISTINCT(A.VENDOR), ',') AS VENDOR
			FROM (
				SELECT CASE WHEN NICK.OSS_NICKNAME IS NOT NULL THEN REPLACE(NICK.OSS_NAME, ' ', '_') ELSE REPLACE(SCORE.PRODUCT, ' ', '_') END PRODUCT
					 , SCORE.VERSION
					 , NICK.OSS_NICKNAME
					 , SCORE.CVE_ID
					 , SCORE.CVSS_SCORE
					 , SCORE.VENDOR
				<if test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
					 , (CASE WHEN SCORE.VERSION = '' THEN 1 WHEN SCORE.VERSION REGEXP '^[0-9\.]+' THEN 2 WHEN SCORE.VERSION REGEXP '^[a-z]+' THEN 3 ELSE 4 END) AS SEQ 
					 , SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 1)+0 AS MAJOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 2), '.', -1)+0 , NULL) AS MINOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 3), '.', -1)+0 , NULL) AS PATCH_VERSION
					 , LENGTH(SCORE.VERSION) AS VERSION_LEN
					 , ASCII(SUBSTRING(SCORE.VERSION, 1)) AS ASCII
				</if>
				FROM NVD_DATA_SCORE_V3 SCORE
		   LEFT JOIN OSS_NICKNAME NICK
		   		  ON (SCORE.PRODUCT = NICK.OSS_NICKNAME
		   		  		OR SCORE.PRODUCT = REPLACE(NICK.OSS_NICKNAME, ' ', '_')
		   		  		OR (SCORE.VENDORPRODUCT IS NOT NULL AND SCORE.VENDORPRODUCT = NICK.OSS_NICKNAME))
			 	WHERE (EXISTS (SELECT 1 FROM NVD_DATA_V3 WHERE PRODUCT = SCORE.PRODUCT) OR EXISTS (SELECT 1 FROM NVD_DATA_V3 WHERE VENDORPRODUCT IS NOT NULL AND VENDORPRODUCT = SCORE.VENDORPRODUCT))
		 	<if test="!@oss.fosslight.util.StringUtil@isEmpty(product)">
		 		<choose>
					<when test="@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
						AND (SCORE.PRODUCT = #{product}
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
							OR SCORE.PRODUCT = #{specialCharactersProduct}
						</if>
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  		<foreach item="item" index="index" collection="ossNicknames">
								OR SCORE.PRODUCT = #{item}
							</foreach>
						</if>
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  		<foreach item="item" index="index" collection="ossNicknameArr">
					  			OR SCORE.VENDORPRODUCT = #{item}
							</foreach>
						</if>
						)
					</when>
					<otherwise>
						AND (SCORE.PRODUCT LIKE CONCAT('%',#{product},'%')
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
							OR SCORE.PRODUCT LIKE CONCAT('%',#{specialCharactersProduct},'%')
						</if>
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  		<foreach item="item" index="index" collection="ossNicknames">
								OR SCORE.PRODUCT = #{item}
							</foreach>
						</if>
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  		<foreach item="item" index="index" collection="ossNicknameArr">
					  			OR SCORE.VENDORPRODUCT = #{item}
							</foreach>
						</if>
						)
					</otherwise>
				 </choose>
		 	</if>
			<if test="!@oss.fosslight.util.StringUtil@isEmpty(cveId)">
		 	   AND EXISTS (SELECT 1 FROM NVD_DATA_V3 NVD_DATA WHERE NVD_DATA.CVE_ID = #{cveId} AND SCORE.PRODUCT = NVD_DATA.PRODUCT AND SCORE.VERSION = NVD_DATA.VERSION)
			</if>
			<if test="!@oss.fosslight.util.StringUtil@isEmpty(version)">
			   AND SCORE.VERSION LIKE CONCAT (#{version},'%')
			</if>
			<if test="!@oss.fosslight.util.StringUtil@isEmpty(vendor)">
			   AND SCORE.VENDOR LIKE CONCAT ('%',#{vendor},'%')
			</if>
			) A
			WHERE 1=1
			<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
				<include refid="filters"/>
			</if>
			GROUP BY A.PRODUCT, A.VERSION
		) B
	</select>
	
	<select id="selectVulnerabilityList" parameterType="oss.fosslight.domain.Vulnerability" resultType="oss.fosslight.domain.Vulnerability">
		SELECT A.PRODUCT, A.VERSION, IFNULL(GROUP_CONCAT(DISTINCT A.OSS_NICKNAME ORDER BY A.OSS_NICKNAME), '') AS OSS_NICKNAME, A.CVE_ID, MAX(A.CVSS_SCORE) AS CVSS_SCORE, GROUP_CONCAT(DISTINCT(A.VENDOR), ',') AS VENDOR
		  FROM (
		  		SELECT CASE WHEN NICK.OSS_NICKNAME IS NOT NULL THEN REPLACE(NICK.OSS_NAME, ' ', '_') ELSE REPLACE(SCORE.PRODUCT, ' ', '_') END PRODUCT
		  			 , SCORE.VERSION
		  			 , NICK.OSS_NICKNAME
		  			 , SCORE.CVE_ID
		  			 , SCORE.CVSS_SCORE
		  			 , SCORE.VENDOR
		  		<if test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
					 , (CASE WHEN SCORE.VERSION = '' THEN 1 WHEN SCORE.VERSION REGEXP '^[0-9\.]+' THEN 2 WHEN SCORE.VERSION REGEXP '^[a-z]+' THEN 3 ELSE 4 END) AS SEQ 
					 , SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 1)+0 AS MAJOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 2), '.', -1)+0 , NULL) AS MINOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 3), '.', -1)+0 , NULL) AS PATCH_VERSION
					 , LENGTH(SCORE.VERSION) AS VERSION_LEN
					 , ASCII(SUBSTRING(SCORE.VERSION, 1)) AS ASCII
				 </if>
		  		FROM NVD_DATA_SCORE_V3 SCORE
			 LEFT JOIN OSS_NICKNAME NICK
		   		    ON (SCORE.PRODUCT = NICK.OSS_NICKNAME
		   		  		OR SCORE.PRODUCT = REPLACE(NICK.OSS_NICKNAME, ' ', '_')
		   		  		OR (SCORE.VENDORPRODUCT IS NOT NULL AND SCORE.VENDORPRODUCT = NICK.OSS_NICKNAME))
				  WHERE (EXISTS (SELECT 1 FROM NVD_DATA_V3 WHERE PRODUCT = SCORE.PRODUCT) OR EXISTS (SELECT 1 FROM NVD_DATA_V3 WHERE VENDORPRODUCT IS NOT NULL AND VENDORPRODUCT = SCORE.VENDORPRODUCT))
			 	<if test="!@oss.fosslight.util.StringUtil@isEmpty(product)">
			 		<choose>
						<when test="@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
							AND (SCORE.PRODUCT = #{product}
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
								OR SCORE.PRODUCT = #{specialCharactersProduct}
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			<foreach item="item" index="index" collection="ossNicknames">
									OR SCORE.PRODUCT = #{item}
								</foreach>
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			<foreach item="item" index="index" collection="ossNicknameArr">
					  				OR SCORE.VENDORPRODUCT = #{item}
								</foreach>
							</if>
							)
						</when>
						<otherwise>
							AND (SCORE.PRODUCT LIKE CONCAT('%',#{product},'%')
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
								OR SCORE.PRODUCT LIKE CONCAT('%',#{specialCharactersProduct},'%')
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			<foreach item="item" index="index" collection="ossNicknames">
									OR SCORE.PRODUCT = #{item}
								</foreach>
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			<foreach item="item" index="index" collection="ossNicknameArr">
					  				OR SCORE.VENDORPRODUCT = #{item}
								</foreach>
							</if>
							)
						</otherwise>
					 </choose>
			 	</if>
			 	<if test="!@oss.fosslight.util.StringUtil@isEmpty(cveId)">
					AND EXISTS (SELECT 1 FROM NVD_DATA_V3 NVD_DATA WHERE NVD_DATA.CVE_ID = #{cveId} AND SCORE.PRODUCT = NVD_DATA.PRODUCT AND SCORE.VERSION = NVD_DATA.VERSION)
				</if>
				<if test="!@oss.fosslight.util.StringUtil@isEmpty(version)">
				   AND VERSION LIKE CONCAT (#{version},'%')
				</if>
				<if test="!@oss.fosslight.util.StringUtil@isEmpty(vendor)">
				   AND VENDOR LIKE CONCAT ('%',#{vendor},'%')
				</if>
		) A
		WHERE 1=1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if>
		GROUP BY A.PRODUCT, A.VERSION
		<include refid="orderby"/>
		<include refid="limitPage"/>
	</select>
	
	<select id="checkVulnDataCnt" parameterType="oss.fosslight.domain.Vulnerability" resultType="int">
		SELECT 
			COUNT(1) 
		FROM NVD_DATA_V3 T1 
			INNER JOIN NVD_CVE_V3 T2 ON T1.CVE_ID = T2.CVE_ID
		WHERE 1=1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(cveId)">
			AND T1.CVE_ID = #{cveId}
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(vulnSummary)">
			<if test="!@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
				AND T2.VULN_SUMMARY LIKE CONCAT('%',#{vulnSummary},'%')
			</if>
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(product)">
			<choose>
				<when test="@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
					AND (
						T1.PRODUCT = #{product}
						<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
			  			    <foreach item="item" index="index" collection="ossNicknames">
								OR T1.PRODUCT = #{item}
							</foreach>
						</if>
					)
				</when>
				<otherwise>
					AND T1.PRODUCT LIKE CONCAT('%',#{product},'%')
				</otherwise>
			</choose>
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(version)">
			<choose>
				<when test="@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
					AND T1.VERSION = #{version}
				</when>
				<otherwise>
					AND T1.VERSION LIKE CONCAT (#{version},'%')
				</otherwise>
			</choose>
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if>
	</select>
	
	<!-- OSS Name 자동완성 -->
	<select id="selectVulnerabilityOSSNameAutoComplete" resultType="String">
		SELECT PRODUCT FROM NVD_DATA_V3 GROUP BY PRODUCT ORDER BY PRODUCT ASC
	</select>
	
	<!-- OSS Version 자동완성 -->
	<select id="selectVulnerabilityOSSVersionAutoComplete" parameterType="String" resultType="String">
		SELECT VERSION 
		FROM NVD_DATA_V3 
		WHERE PRODUCT= #{name}
		GROUP BY VERSION 
		ORDER BY VERSION ASC
	</select>
	
	<!-- CVE_ID 자동완성 -->
	<select id="selectVulnerabilityCveIdAutoComplete" resultType="String">
		SELECT CVE_ID 
		FROM NVD_CVE_V3 
		ORDER BY CVE_ID ASC
	</select>
	
	<select id="getVulnListByOssNameCnt" parameterType="oss.fosslight.domain.OssMaster" resultType="int">
		SELECT COUNT(*) AS CNT
		  FROM (
			<!-- exact match -->
				SELECT DATA.PRODUCT
					 , DATA.VERSION
					 , CVE.CVSS_SCORE
					 , CVE.CVE_ID
					 , CVE.VULN_SUMMARY
					 , CVE.MODI_DATE
					 <if test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
						, (CASE WHEN DATA.VERSION = '' THEN 1 WHEN DATA.VERSION REGEXP '^[0-9\.]+' THEN 2 WHEN DATA.VERSION REGEXP '^[a-z]+' THEN 3 ELSE 4 END) AS SEQ 
						, SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 1)+0 AS MAJOR_VERSION 
						, IF(DATA.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 2), '.', -1)+0 , NULL) AS MINOR_VERSION 
						, IF(DATA.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 3), '.', -1)+0 , NULL) AS PATCH_VERSION
						, LENGTH(DATA.VERSION) AS VERSION_LEN
						, ASCII(SUBSTRING(DATA.VERSION, 1)) AS ASCII
					 </if>
				  FROM (
				  		SELECT NVD.PRODUCT, NVD.VERSION, NVD.CVE_ID
				  		FROM
				  		(SELECT REPLACE(PRODUCT, ' ', '_') AS PRODUCT
				 			 , VERSION
				 			 , CVE_ID
				  		  FROM NVD_DATA_V3
				  		 WHERE (
				  		 		PRODUCT = #{ossName}
				  		 		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			    <foreach item="item" index="index" collection="ossNicknames">
										OR PRODUCT = #{item}
									</foreach>
								</if>
								<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			    <foreach item="item" index="index" collection="ossNicknameArr">
										OR VENDORPRODUCT = #{item}
									</foreach>
								</if>
				 				)
				 		 <if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
				 		   AND VERSION = #{ossVersion}
				 		 </if>
				 		 ) NVD
				 		 GROUP BY NVD.PRODUCT, NVD.VERSION, NVD.CVE_ID
				 	   ) DATA
				 INNER JOIN NVD_CVE_V3 CVE
				    ON DATA.CVE_ID = CVE.CVE_ID
		  ) A
		  WHERE 1 = 1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if> 
	</select>
	
	<select id="getVulnListByOssName" parameterType="oss.fosslight.domain.OssMaster" resultType="oss.fosslight.domain.Vulnerability">
		SELECT A.*
		  FROM (
				SELECT DATA.PRODUCT
					 , DATA.VERSION
					 , CVE.CVSS_SCORE
					 , CVE.CVE_ID
					 , CVE.VULN_SUMMARY
					 , CVE.PUBL_DATE
					 , CVE.MODI_DATE
					 , (SELECT VULNERABILITY_RESOLUTION FROM NVD_DATA_SECURITY 
					 	WHERE CVE_ID = CVE.CVE_ID 
					 	AND OSS_NAME = #{ossName} 
					 <if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
					 	AND OSS_VERSION = #{ossVersion}
					 </if>
					 <if test="@oss.fosslight.util.StringUtil@equals('-', ossVersion)">
					 	AND OSS_VERSION = ''
					 </if>
					 	) AS VULNERABILITY_RESOLUTION
					 <if test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
						, (CASE WHEN DATA.VERSION = '' THEN 1 WHEN DATA.VERSION REGEXP '^[0-9\.]+' THEN 2 WHEN DATA.VERSION REGEXP '^[a-z]+' THEN 3 ELSE 4 END) AS SEQ 
						, SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 1)+0 AS MAJOR_VERSION 
						, IF(DATA.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 2), '.', -1)+0 , NULL) AS MINOR_VERSION 
						, IF(DATA.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN DATA.VERSION REGEXP '^[0-9]+' THEN DATA.VERSION END), '.', 3), '.', -1)+0 , NULL) AS PATCH_VERSION
						, LENGTH(DATA.VERSION) AS VERSION_LEN
						, ASCII(SUBSTRING(DATA.VERSION, 1)) AS ASCII
					 </if>
				  FROM (
				  		SELECT NVD.PRODUCT, NVD.VERSION, NVD.CVE_ID
				  		FROM
				  		(SELECT REPLACE(PRODUCT, ' ', '_') AS PRODUCT
				 			 , VERSION
				 			 , CVE_ID
				  		  FROM NVD_DATA_V3
				  		 WHERE (
				  		 		PRODUCT = #{ossName}
				  		 		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			    <foreach item="item" index="index" collection="ossNicknames">
										OR PRODUCT = #{item}
									</foreach>
								</if>
								<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			    <foreach item="item" index="index" collection="ossNicknameArr">
										OR VENDORPRODUCT = #{item}
									</foreach>
								</if>
				 				)
				 		 <if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
				 		   AND VERSION = #{ossVersion}
				 		 </if>
				 		 ) NVD
				 		 GROUP BY NVD.PRODUCT, NVD.VERSION, NVD.CVE_ID
				 	   ) DATA
				 INNER JOIN NVD_CVE_V3 CVE
				    ON DATA.CVE_ID = CVE.CVE_ID
		  ) A
		  WHERE 1 = 1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if> 
		<include refid="orderby"/>
		<include refid="limitPage"/>
	</select>
	
	<update id="updateOssRecheckVulnFlag">
		UPDATE OSS_MASTER SET VULN_CPE_NM = NULL, CVSS_SCORE = NULL, CVE_ID = NULL, VULN_YN = NULL, VULN_RECHECK = 'N', VULN_DATE = NULL WHERE VULN_RECHECK = 'Y'
	</update>
	<select id="selectNvdTotalCount" resultType="int">SELECT COUNT(1) FROM NVD_DATA_SCORE_V3</select>
   <select id="selectVendorProductInfo" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
    	SELECT PRODUCT, VERSION, VENDOR, CVE_ID, CVSS_SCORE, MODI_DATE 
    	FROM NVD_DATA_SCORE_V3 
    	WHERE VERSION = #{ossVersion} AND ( VENDORPRODUCT = #{ossName}
		<if test="dashOssNameList != null">
			<foreach item="item" collection="dashOssNameList">
				OR VENDORPRODUCT = #{item}
			</foreach>
		</if>
		)
		ORDER BY CVSS_SCORE DESC
   </select>
   <select id="selectVendorProductSndMailList" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
    	SELECT NVD.PRODUCT, NVD.VERSION, NVD.VENDOR, CVE.CVE_ID, CVE.CVSS_SCORE, CVE.MODI_DATE
		FROM    		
    	(
    		SELECT PRODUCT, VERSION, VENDOR, CVE_ID
    		FROM NVD_DATA_V3 
    		WHERE VENDORPRODUCT IS NOT NULL
    		AND VERSION = #{ossVersion} 
    		AND ( VENDORPRODUCT = #{ossName}
		<if test="dashOssNameList != null">
			<foreach item="item" collection="dashOssNameList">
				OR VENDORPRODUCT = #{item}
			</foreach>
		</if>)
		) NVD
		INNER JOIN NVD_CVE_V3 CVE
		ON NVD.CVE_ID = CVE.CVE_ID
		ORDER BY CVE.CVSS_SCORE*1 DESC
   </select>
   <select id="selectNvdInfo" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
    	SELECT PRODUCT, VERSION, VENDOR, CVE_ID, CVSS_SCORE, MODI_DATE 
    	FROM NVD_DATA_SCORE_V3 
    	WHERE VERSION = #{ossVersion} AND ( PRODUCT = #{ossName}
		<if test="ossNicknames != null">
			<foreach item="item" collection="ossNicknames">
				OR PRODUCT = #{item}
			</foreach>
		</if>
		<if test="conversionNameList != null">
			<foreach item="item" collection="conversionNameList">
				OR PRODUCT = #{item}
			</foreach>
		</if>
		)
		ORDER BY CVSS_SCORE DESC
    </select>
    <select id="selectNvdInfoSndMailList" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
    	SELECT NVD.PRODUCT, NVD.VERSION, NVD.VENDOR, CVE.CVE_ID, CVE.CVSS_SCORE, CVE.MODI_DATE 
    	FROM
    	(
    		SELECT PRODUCT, VERSION, VENDOR, CVE_ID
    		FROM NVD_DATA_V3
    		WHERE VERSION = #{ossVersion} 
    		AND ( PRODUCT = #{ossName}
			<if test="ossNicknames != null">
				<foreach item="item" collection="ossNicknames">
					OR PRODUCT = #{item}
				</foreach>
			</if>
			<if test="conversionNameList != null">
				<foreach item="item" collection="conversionNameList">
					OR PRODUCT = #{item}
				</foreach>
			</if>)
		) NVD
		INNER JOIN NVD_CVE_V3 CVE
		ON NVD.CVE_ID = CVE.CVE_ID
		ORDER BY CVE.CVSS_SCORE*1 DESC
    </select>
    <select id="selectDiffVendorForProduct" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
    	SELECT NVD.PRODUCT, NVD.VENDOR, NVD.CVE_ID
    	FROM (
    		SELECT NVD.PRODUCT, NVD.VENDOR, CVE.CVE_ID
    		FROM NVD_DATA_V3 NVD
    		INNER JOIN NVD_CVE_V3 CVE
    		ON NVD.CVE_ID = CVE.CVE_ID
    		WHERE NVD.VENDOR != ''
    		AND ( NVD.PRODUCT = #{ossName}
			<if test="ossNicknames != null">
				<foreach item="item" collection="ossNicknames">
					OR NVD.PRODUCT = #{item}
				</foreach>
			</if>
			)
		) NVD
		GROUP BY NVD.PRODUCT, NVD.VENDOR
		
		UNION
		
		SELECT NVD.PRODUCT, NVD.VENDOR, NVD.CVE_ID
    	FROM (
    		SELECT NVD.PRODUCT, NVD.VENDOR, CVE.CVE_ID
    		FROM NVD_DATA_V3 NVD
    		INNER JOIN NVD_CVE_V3 CVE
    		ON NVD.CVE_ID = CVE.CVE_ID
    		WHERE NVD.VENDOR != ''
    		AND ( NVD.VENDORPRODUCT = #{ossName}
			<if test="ossNicknames != null">
				<foreach item="item" collection="ossNicknames">
					OR NVD.VENDORPRODUCT = #{item}
				</foreach>
			</if>
			)
		) NVD
		GROUP BY NVD.PRODUCT, NVD.VENDOR
    </select>
    <insert id="insertNvdOssHis" parameterType="oss.fosslight.domain.OssMaster">
    	INSERT INTO NVD_OSS_HIS (OSS_ID, OSS_NAME, OSS_VERSION, CVE_ID, CVSS_SCORE, CVE_ID_TO, CVSS_SCORE_TO) VALUES (#{ossId}, #{ossName}, #{ossVersion}, #{cveId}, #{cvssScore}, #{cveIdTo}, ${cvssScoreTo});
    </insert>
    <update id="deleteOssVulnInfo" parameterType="String">
		UPDATE OSS_MASTER SET VULN_CPE_NM = NULL, CVSS_SCORE = NULL, CVE_ID = NULL, VULN_YN = 'N', VULN_DATE = NULL WHERE OSS_ID = #{ossId}
    </update>
    <update id="updateOssVulnInfoNew" parameterType="oss.fosslight.domain.OssMaster">
    	UPDATE OSS_MASTER SET CVSS_SCORE = #{cvssScore}, VULN_YN = 'Y', VULN_DATE = NOW(), CVE_ID = #{cveId} WHERE OSS_ID = #{ossId}
    </update>
    
	<select id="selectUsedVulnerabilityOssProject" parameterType="oss.fosslight.domain.OssMaster" resultType="String">
		SELECT 
			T1.PRJ_ID 
		FROM PROJECT_MASTER T1
		WHERE
			T1.USE_YN = 'Y'
			AND T1.IDENTIFICATION_STATUS = 'CONF'
			AND (T1.DROP_YN IS NULL OR T1.DROP_YN != 'Y')
			AND EXISTS (
					SELECT 1 
					FROM OSS_COMPONENTS T2 
					WHERE 
						T1.PRJ_ID = T2.REFERENCE_ID 
						AND T2.REFERENCE_DIV = '50' 
						AND ( OSS_NAME = #{ossName}
					<if test="ossNames != null">
						<foreach collection="ossNames" item="item" open="OR " close="" separator="OR">
							OSS_NAME = #{item}
						</foreach>
					</if>
						)
						AND OSS_VERSION = #{ossVersion}
			)
	</select>
	
    <!-- CVE ID 가 자주 변경되지 않도록 CVE_ID 순으로 정렬한다. -->
    <select id="selectNvdInfoWithOutVer" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
		SELECT T2.PRODUCT, T2.VERSION, T2.CVE_ID, T2.CVSS_SCORE, T2.MODI_DATE FROM (
	    	SELECT PRODUCT, MAX(CVSS_SCORE) AS CVSS_SCORE
	    	FROM NVD_DATA_SCORE_V3 
	    	WHERE PRODUCT = #{ossName}
			  AND VERSION = '-'
	    	GROUP BY PRODUCT
    	)  T1
    	INNER JOIN NVD_DATA_SCORE_V3 T2 ON T1.PRODUCT = T2.PRODUCT AND T1.CVSS_SCORE = T2.CVSS_SCORE
    	ORDER BY CVE_ID
    	LIMIT 1
    </select>
    
    <select id="selectVendorProductInfoWithOurVer" parameterType="oss.fosslight.domain.OssMaster" resultType="HashMap">
		SELECT T2.PRODUCT, T2.VERSION, T2.VENDOR, T2.CVE_ID, T2.CVSS_SCORE, T2.MODI_DATE 
    	FROM (
    		SELECT PRODUCT, MAX(CVSS_SCORE) AS CVSS_SCORE
    		FROM NVD_DATA_SCORE_V3 
    		WHERE VERSION = '-' 
    		AND ( VENDORPRODUCT = #{ossName}
			<if test="dashOssNameList != null">
				<foreach item="item" collection="dashOssNameList">
				OR VENDORPRODUCT = #{item}
				</foreach>
			</if>
			)
			GROUP BY PRODUCT
		) T1
		INNER JOIN NVD_DATA_SCORE_V3 T2 ON T1.PRODUCT = T2.PRODUCT AND T1.CVSS_SCORE = T2.CVSS_SCORE
    	ORDER BY CVE_ID
    	LIMIT 1
    </select>
    
    <select id="selectVulnerabilityExportList" parameterType="oss.fosslight.domain.Vulnerability" resultType="oss.fosslight.domain.Vulnerability">
		SELECT A.*, CVE.VULN_SUMMARY, CVE.PUBL_DATE, CVE.MODI_DATE
		  FROM (SELECT CASE WHEN NICK.OSS_NICKNAME IS NOT NULL THEN REPLACE(NICK.OSS_NAME, ' ', '_') ELSE REPLACE(SCORE.PRODUCT, ' ', '_') END PRODUCT
				     , SCORE.VERSION
				     , SCORE.CVE_ID
					 , SCORE.CVSS_SCORE
					 , SCORE.VENDOR
				 <if test="@oss.fosslight.util.StringUtil@equals('VERSION', sidx)">
					 , (CASE WHEN SCORE.VERSION = '' THEN 1 WHEN SCORE.VERSION REGEXP '^[0-9\.]+' THEN 2 WHEN SCORE.VERSION REGEXP '^[a-z]+' THEN 3 ELSE 4 END) AS SEQ 
					 , SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 1)+0 AS MAJOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 2), '.', -1)+0 , NULL) AS MINOR_VERSION 
					 , IF(SCORE.VERSION REGEXP '[\.]{1}' , SUBSTRING_INDEX(SUBSTRING_INDEX((CASE WHEN SCORE.VERSION REGEXP '^[0-9]+' THEN SCORE.VERSION END), '.', 3), '.', -1)+0 , NULL) AS PATCH_VERSION
					 , LENGTH(SCORE.VERSION) AS VERSION_LEN
					 , ASCII(SUBSTRING(SCORE.VERSION, 1)) AS ASCII
				 </if>
				  FROM NVD_DATA_SCORE_V3 SCORE
			 LEFT JOIN OSS_NICKNAME NICK
		   		    ON (SCORE.PRODUCT = NICK.OSS_NICKNAME
		   		  		OR SCORE.PRODUCT = REPLACE(NICK.OSS_NICKNAME, ' ', '_')
		   		  		OR (SCORE.VENDORPRODUCT IS NOT NULL AND SCORE.VENDORPRODUCT = NICK.OSS_NICKNAME))
				 WHERE EXISTS (SELECT 1 FROM NVD_DATA_V3 WHERE PRODUCT = SCORE.PRODUCT)
			 	<if test="!@oss.fosslight.util.StringUtil@isEmpty(product)">
			 		<choose>
						<when test="@oss.fosslight.util.StringUtil@equalsIgnoreCase(ossNameAllSearchFlag,'Y')">
							AND (SCORE.PRODUCT = #{product}
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
								OR SCORE.PRODUCT = #{specialCharactersProduct}
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			<foreach item="item" index="index" collection="ossNicknames">
									OR SCORE.PRODUCT = #{item}
								</foreach>
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			<foreach item="item" index="index" collection="ossNicknameArr">
					  				OR SCORE.VENDORPRODUCT = #{item}
								</foreach>
							</if>
							)
						</when>
						<otherwise>
							AND (SCORE.PRODUCT LIKE CONCAT('%',#{product},'%')
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(specialCharactersProduct)">
								OR SCORE.PRODUCT LIKE CONCAT('%',#{specialCharactersProduct},'%')
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			<foreach item="item" index="index" collection="ossNicknames">
									OR SCORE.PRODUCT = #{item}
								</foreach>
							</if>
							<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			<foreach item="item" index="index" collection="ossNicknameArr">
					  				OR SCORE.VENDORPRODUCT = #{item}
								</foreach>
							</if>
							)
						</otherwise>
					 </choose>
			 	</if>
			 	<if test="!@oss.fosslight.util.StringUtil@isEmpty(cveId)">
					AND EXISTS (SELECT 1 FROM NVD_DATA_V3 NVD_DATA WHERE NVD_DATA.CVE_ID = #{cveId} AND SCORE.PRODUCT = NVD_DATA.PRODUCT AND SCORE.VERSION = NVD_DATA.VERSION)
				</if>
				<if test="!@oss.fosslight.util.StringUtil@isEmpty(version)">
				   AND VERSION LIKE CONCAT (#{version},'%')
				</if>
				<if test="!@oss.fosslight.util.StringUtil@isEmpty(vendor)">
				   AND VENDOR LIKE CONCAT ('%',#{vendor},'%')
				</if>
		) A
		LEFT JOIN NVD_CVE_V3 CVE
		ON A.CVE_ID = CVE.CVE_ID
		AND A.CVSS_SCORE = CVE.CVSS_SCORE
		WHERE 1=1
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(filterCondition)">
			<include refid="filters"/>
		</if>
		<include refid="orderby"/>
		<include refid="limitPage"/>
	</select>
    
    <select id="getCveInfo" resultType="HashMap">SELECT * FROM NVD_CVE_V3 WHERE CVE_ID = #{cveId}</select>

	<select id="selectMaxScoreNvdInfo" parameterType="hashMap" resultType="oss.fosslight.domain.CamelMap">
		SELECT CVSS_SCORE
			 , <![CDATA[CONCAT(#{host}, '/vulnerability/vulnpopup?ossName=', PRODUCT, '&ossVersion=', VERSION, '&vulnType=v&isPopup=Y')]]> AS VULNERABILITY_LINK
		FROM NVD_DATA_SCORE_V3
		WHERE PRODUCT = #{ossName}
		  AND VERSION = #{ossVersion}
	</select>

	<select id="getPatchLinkForNvdData" parameterType="string" resultType="string">
		SELECT PATCH_LINK AS patchLink
		FROM NVD_DATA_PATCH_LINK
		WHERE CVE_ID = #{cveId}
	</select>
	
	<select id="getSecurityVulnListByOssNameCnt" parameterType="oss.fosslight.domain.OssMaster" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM
		(
		SELECT CVE.CVSS_SCORE, CVE.CVE_ID, CVE.PUBL_DATE
		FROM NVD_CVE_V3 CVE
		WHERE CAST(CVE.CVSS_SCORE AS DECIMAL(10,1)) <![CDATA[>=]]> 8.0
		AND EXISTS (SELECT 1 FROM NVD_DATA_V3 NVD
				  		 WHERE (
				  		 		PRODUCT = #{ossName}
				  		 		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			    <foreach item="item" index="index" collection="ossNicknames">
										OR PRODUCT = #{item}
									</foreach>
								</if>
								<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			    <foreach item="item" index="index" collection="ossNicknameArr">
										OR VENDORPRODUCT = #{item}
									</foreach>
								</if>
									)
						<if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
				 		   	AND VERSION = #{ossVersion}
				 		</if>
						AND CVE.CVE_ID = NVD.CVE_ID 
				 	) 
		GROUP BY CVE.CVSS_SCORE, CVE.CVE_ID, CVE.PUBL_DATE
		ORDER BY CVE.CVSS_SCORE DESC, CVE.PUBL_DATE DESC
		) A
	</select>
	
	<select id="getSecurityVulnListByOssName" parameterType="oss.fosslight.domain.OssMaster" resultType="oss.fosslight.domain.Vulnerability">
		SELECT CVE.CVSS_SCORE, CVE.CVE_ID, DATE_FORMAT(CVE.PUBL_DATE, '%Y-%m-%d') AS PUBL_DATE
		FROM NVD_CVE_V3 CVE
		WHERE CVE.CVE_ID IN (SELECT CVE_ID FROM NVD_DATA_V3 NVD
							WHERE (PRODUCT = #{ossName}
				  		 		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
					  			    <foreach item="item" index="index" collection="ossNicknames">
										OR PRODUCT = #{item}
									</foreach>
								</if>
								<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
					  			    <foreach item="item" index="index" collection="ossNicknameArr">
										OR VENDORPRODUCT = #{item}
									</foreach>
								</if>
									)
						<if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
				 		   	AND VERSION = #{ossVersion}
				 		</if>)
		AND CVE.CVSS_SCORE <![CDATA[>=]]> 8.0
	</select>
	
	<select id="getCpeInfoAndRange" parameterType="string" resultType="oss.fosslight.domain.CamelMap">
		SELECT MATCH_CRITERIA_ID, CRITERIA, VER_START_INC, VER_END_INC, VER_START_EXC, VER_END_EXC
		FROM NVD_DATA_CONFIGURATIONS
		WHERE CVE_ID = #{cveId}
		AND (PRODUCT = #{ossName}
			OR CONCAT(VENDOR,'-',PRODUCT) = #{ossName}
			OR PRODUCT = REPLACE(#{ossName}, ' ', '_')
			OR PRODUCT IN (SELECT OSS_NICKNAME FROM OSS_NICKNAME WHERE OSS_NAME = #{ossName})
			OR PRODUCT IN (SELECT REPLACE(OSS_NICKNAME, ' ', '_') FROM OSS_NICKNAME WHERE OSS_NAME = #{ossName}))
	</select>
	
	<select id="getCpeMatchForCpeInfoCnt" parameterType="HashMap" resultType="int">
		SELECT COUNT(*)
		FROM NVD_CPE_MATCH
		WHERE MATCH_CRITERIA_ID = #{matchCriteriaId}
		AND CPE23URI = #{criteria}
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(verStartInc)">
			AND VER_START_INC = #{verStartInc}
		</if>
		<if test="@oss.fosslight.util.StringUtil@isEmpty(verStartInc)">
			AND IFNULL(VER_START_INC, '') = ''
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(verEndInc)">
			AND VER_END_INC = #{verEndInc}
		</if>
		<if test="@oss.fosslight.util.StringUtil@isEmpty(verEndInc)">
			AND IFNULL(VER_END_INC, '') = ''
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(verStartExc)">
			AND VER_START_EXC = #{verStartExc}
		</if>
		<if test="@oss.fosslight.util.StringUtil@isEmpty(verStartExc)">
			AND IFNULL(VER_START_EXC, '') = ''
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(verEndExc)">
			AND VER_END_EXC = #{verEndExc}
		</if>
		<if test="@oss.fosslight.util.StringUtil@isEmpty(verEndExc)">
			AND IFNULL(VER_END_EXC, '') = ''
		</if>
	</select>
	
	<select id="checkDiscoveredSndMailCnt" parameterType="oss.fosslight.domain.OssMaster" resultType="int">
		SELECT COUNT(*)
		FROM OSS_DISCOVERED_SND_EMAIL
		WHERE OSS_ID = #{ossId}
		  AND SND_YN = 'N'
	</select>
	
	<insert id="insertOssDiscoveredSndEmail" parameterType="hashMap">
    	INSERT INTO OSS_DISCOVERED_SND_EMAIL (
    		OSS_ID
    		, PRODUCT
    		, VERSION
    		, CVE_ID
    		, CVSS_SCORE
    	) VALUES (
    		#{OSS_ID}
    		, #{PRODUCT}
    		, #{VERSION}
    		, #{CVE_ID}
    		, #{CVSS_SCORE}
    	) ON DUPLICATE KEY UPDATE
			CVSS_SCORE		= #{CVSS_SCORE}
    </insert>
    
    <update id="updateOssDiscoveredSndEmail" parameterType="string">
		UPDATE OSS_DISCOVERED_SND_EMAIL SET SND_YN = 'Y', SND_DATE = now() WHERE SND_YN = 'N'
	</update>
	
	<select id="selectDiscoveredSndMailList" parameterType="oss.fosslight.domain.OssMaster" resultType="hashMap">
		SELECT * FROM OSS_DISCOVERED_SND_EMAIL 
		WHERE OSS_ID = #{ossId}
		<if test="@oss.fosslight.util.StringUtil@equals('Y', sndMailCheckFlag)">
			AND SND_YN = 'Y'
		</if>
		<if test="@oss.fosslight.util.StringUtil@equals('N', sndMailCheckFlag)">
			AND SND_YN = 'N'
		</if>
	</select>
	
	<select id="selectNotFixedCveInfo" parameterType="oss.fosslight.domain.OssMaster" resultType="oss.fosslight.domain.Vulnerability">
		SELECT CVE.CVE_ID, CVE.CVSS_SCORE, VULN_SUMMARY
		FROM (
			SELECT NVD.CVE_ID
			FROM NVD_DATA_V3 NVD
			WHERE 1=1
			AND (PRODUCT = #{ossName}
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknames)">
			<foreach item="item" index="index" collection="ossNicknames">
				OR PRODUCT = #{item}
			</foreach>
		</if>
		<if test="!@oss.fosslight.util.StringUtil@isEmpty(ossNicknameArr)">
		    <foreach item="item" index="index" collection="ossNicknameArr">
				OR VENDORPRODUCT = #{item}
			</foreach>
		</if>
		<if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
			AND VERSION = #{ossVersion}
		</if>
			AND NVD.CVE_ID NOT IN (SELECT CVE_ID FROM NVD_DATA_SECURITY
								WHERE OSS_NAME = #{ossName}
							<if test="@oss.fosslight.util.StringUtil@notEquals('-', ossVersion)">
								AND OSS_VERSION = #{ossVersion}
							</if>
							<if test="@oss.fosslight.util.StringUtil@equals('-', ossVersion)">
								AND OSS_VERSION = ''
							</if>
								AND VULNERABILITY_RESOLUTION = 'Fixed')
			)
		) NVD
		INNER JOIN NVD_CVE_V3 CVE
		ON NVD.CVE_ID = CVE.CVE_ID
		ORDER BY CVE.CVSS_SCORE*1 DESC
		LIMIT 1
	</select>
</mapper>