# OSS Name : peter-evans-docker-compose-actions-workflow
# SPDX-License-Identifier: MIT

name: Pull requests fosslight

on:
  pull_request:
    branches:
      - '*'
jobs:
  check-commit-message:
    uses: fosslight/.github/.github/workflows/base-check-commit-message.yml@main
    secrets:
      envPAT: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: mariadb:10
        container_name: fosslight_db
        ports:
          - "3306:3306"
        volumes:
          - ./db/conf.d:/etc/mysql/conf.d
          - ./db/data:/var/lib/mysql
          - ./db/initdb.d:/docker-entrypoint-initdb.d
        env_file: docker.env
        environment:
          TZ: Asia/Seoul
        restart: always
        expose:
          - "3306"
      web:
        image: appropriate/curl
        ports:
          - "8180:8180"
      mail:
        image: mailserver/docker-mailserver:10
        container_name: fosslight_mail
        hostname: mail
        domainname: fosslight.org
        ports:
          - "25:25"
          - "587:587"
        expose:
          - "25"
          - "587"
        volumes:
          - ./mail/maildata/:/var/mail
          - ./mail/mailstate/:/var/mail-state
          - ./mail/maillogs/:/var/log/mail
          - ./mail/config/:/tmp/docker-mailserver/
        environment:
          - ENABLE_SPAMASSASSIN=1
          - SPAMASSASSIN_SPAM_TO_INBOX=1
          - ENABLE_CLAMAV=0
          - ENABLE_FAIL2BAN=1
          - ENABLE_POSTGREY=1
          - ENABLE_SASLAUTHD=0
          - ONE_DIR=1
          - DMS_DEBUG=0
        cap_add:
          - NET_ADMIN
          - SYS_PTRACE
        restart: always

    steps:
      - name: Check the site
        run: docker run --network host appropriate/curl -s --retry 3 --retry-connrefused http://localhost:8180/session/login

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build the stack
        run: docker-compose up -d db

      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Grant permission for db data
        run: sudo chmod -R 755 db/data/

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml
