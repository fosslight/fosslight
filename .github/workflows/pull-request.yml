# OSS Name : peter-evans-docker-compose-actions-workflow
# SPDX-License-Identifier: MIT

name: Pull requests fosslight

on:
  pull_request:
    branches:
      - '*'
jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Subject Line Length
        uses: tim-actions/commit-message-checker-with-regex@v0.3.1
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.{0,50}(\n.*)*$'
          error: 'Subject too long (max 50)'
      - name: Check Body Line Length
        if: ${{ success() || failure() }}
        uses: tim-actions/commit-message-checker-with-regex@v0.3.1
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.+(\n.{0,72})*$'
          error: 'Body line too long (max 72)'
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build the stack
        run: docker-compose up --build -d
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
      - name: Check running containers
        run: docker-compose ps
      - name: Save docker-compose logs
        run:
          docker-compose logs --no-color web > docker-compose-web.log &&
          docker-compose logs --no-color db > docker-compose-db.log &&
          docker-compose logs --no-color mail > docker-compose-mail.log
      - name: Check the site
        run: docker run --network container:fosslight_web appropriate/curl -s --retry 3 --retry-connrefused http://localhost:8180/session/login
      - name: Stop containers
        if: always()
        run: docker-compose down
      - name: Show db container log
        run: cat docker-compose-db.log
      - name: Show web container log
        run: cat docker-compose-web.log
      - name: Show mail container log
        run: cat docker-compose-mail.log

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build the stack
        run: docker-compose up -d db

      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Grant permission for db data
        run: sudo chmod -R 755 db/data/

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml
