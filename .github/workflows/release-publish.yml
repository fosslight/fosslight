# 1. Update changelog
# 2. Build the exe file and upload it in the release assets
# 3. Deploy the latest release to demo.fosslight.org
# 4. Deploy Image to Docker Hub

name: Release FOSSLight

on:
  release:
    types: [ published ]

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ref: [ main, develop ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.ref }}

      - name: update changelog with gren
        env:
          GREN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install github-release-notes@0.17.3
          node_modules/.bin/gren changelog --override

      - name: Commit files
        run: |
          git config --global user.email "fosslight-dev@lge.com"
          git config --global user.name "FOSSLight-dev"
          git add CHANGELOG.md
          git commit -m "Update ChangeLog on ${{ matrix.ref }} branch"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ matrix.ref }}

  deploy-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: JIB Build and push
        run: >
          ./gradlew jib 
          -Djib.to.image='${{ secrets.DOCKERHUB_USERNAME }}/fosslight' 
          -Djib.to.tags=${{ github.event.release.tag_name }},latest
          -Pjib.multiplatform 
